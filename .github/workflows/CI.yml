name: CI

on:
  push:
    paths-ignore:
    - '.devcontainer/**'
    - '.gitpod.yml'
    - '.vscode/**'
  pull_request:
    paths-ignore:
    - '.devcontainer/**'
    - '.gitpod.yml'
    - '.vscode/**'
  schedule:
    # Run against the last commit on the default branch on Friday at 8pm (UTC?)
    - cron: '0 20 * * 5'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - 1.51.0  # MSRV
          - nightly # For checking minimum version dependencies.

    steps:
      - name: Checkout Mini Moka
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: cargo clean
        uses: actions-rs/cargo@v1
        with:
          command: clean

      - name: Downgrade dependencies to minimal versions (Nightly only)
        uses: actions-rs/cargo@v1
        if: ${{ matrix.rust == 'nightly' }}
        with:
          command: update
          args: -Z minimal-versions

      - name: Pin some dependencies to specific versions (MSRV only)
        if: ${{ matrix.rust == '1.51.0' }}
        # hashbrown >= v0.12 requires Rust 2021 edition.
        # pull-down-cmark >= 0.9.2 requires Rust 2021 edition.
        # once_cell >= 1.15.0 requires Rust 2021 edition.
        run: |
          cargo update -p dashmap --precise 5.2.0
          cargo update -p pulldown-cmark --precise 0.9.1
          cargo update -p once_cell --precise 1.14.0

      - name: Show cargo tree
        uses: actions-rs/cargo@v1
        with:
          command: tree

      - name: Run tests (debug, sync feature)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features sync

      - name: Run tests (release, sync feature)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --features sync
